// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesRentalAPI.DbContexts;

namespace MoviesRentalAPI.Migrations
{
    [DbContext(typeof(MoviesRentalContext))]
    partial class MoviesRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.8.20407.4");

            modelBuilder.Entity("MoviesRentalAPI.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobile")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2000, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yoyo@gmail.com",
                            FirstName = "yaseen",
                            LastName = "Ahmed",
                            Mobile = 123456787,
                            RegistrationDate = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UniqueKey = "yo12546785"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2000, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yoyo@gmail.com",
                            FirstName = "Maaz",
                            LastName = "Ahmed",
                            Mobile = 123456787,
                            RegistrationDate = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UniqueKey = "yo78945612"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2000, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yoyo@gmail.com",
                            FirstName = "Muiz",
                            LastName = "Ahmed",
                            Mobile = 123456787,
                            RegistrationDate = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UniqueKey = "yo74185296"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(2000, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yoyo@gmail.com",
                            FirstName = "Kaif",
                            LastName = "Ahmed",
                            Mobile = 123456787,
                            RegistrationDate = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UniqueKey = "yo96852741"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(2000, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Yoyo@gmail.com",
                            FirstName = "Faizan",
                            LastName = "Ahmed",
                            Mobile = 123456787,
                            RegistrationDate = new DateTime(2017, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UniqueKey = "yo14725896"
                        });
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrailerURI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Writer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 2,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dil Ke Arman",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 2,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 2,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.3",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Kal Ho Na Ho",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 3,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 1,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.1",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Housefull 3",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 4,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 1,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.3",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bol Bachan",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 5,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 4,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.9",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Don 3",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 6,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 5,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.2",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Annabel",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 7,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 4,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.6",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dhoom 3",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 8,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 3,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.2",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Jab Harry Met To Sejal",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 9,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 3,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ae Dil Hai Mushkil",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        },
                        new
                        {
                            Id = 10,
                            Description = "It is one of the finest movies with full of drama and emotion",
                            Director = "Kon hai Ki",
                            GenreId = 5,
                            Image = "image.png",
                            Producer = "Mere Paas Paisay nai Hein",
                            Rating = "4.4",
                            ReleaseDate = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Isssh Phir Koi Hai...",
                            TrailerURI = "Youtube/trailers",
                            Writer = "Malum nai"
                        });
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StockId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 4,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 3
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 5,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 4
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 8
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 10
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 1,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 12
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 3,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 13
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 2,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 15
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 4,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 16
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 5,
                            RentalDate = new DateTime(2018, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            StockId = 17
                        });
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = false,
                            MovieId = 1,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            MovieId = 1,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = false,
                            MovieId = 2,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = false,
                            MovieId = 2,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            MovieId = 3,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            MovieId = 3,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = false,
                            MovieId = 4,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = false,
                            MovieId = 4,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = true,
                            MovieId = 5,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = false,
                            MovieId = 5,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 11,
                            IsAvailable = true,
                            MovieId = 6,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 12,
                            IsAvailable = false,
                            MovieId = 6,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 13,
                            IsAvailable = false,
                            MovieId = 7,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 14,
                            IsAvailable = true,
                            MovieId = 7,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 15,
                            IsAvailable = false,
                            MovieId = 8,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 16,
                            IsAvailable = false,
                            MovieId = 9,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 17,
                            IsAvailable = false,
                            MovieId = 10,
                            UniqueKey = "124578yo"
                        },
                        new
                        {
                            Id = 18,
                            IsAvailable = true,
                            MovieId = 10,
                            UniqueKey = "124578yo"
                        });
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Movie", b =>
                {
                    b.HasOne("MoviesRentalAPI.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Rental", b =>
                {
                    b.HasOne("MoviesRentalAPI.Entities.Customer", "Customer")
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesRentalAPI.Entities.Stock", "Stock")
                        .WithMany("Rentals")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesRentalAPI.Entities.Stock", b =>
                {
                    b.HasOne("MoviesRentalAPI.Entities.Movie", "Movie")
                        .WithMany("Stocks")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
